пакет главный

импорт (
	«Bufio»
	«FMT»
	"Ос"
	"strconv"
	«струны»
)

// Карта княжеская княгиня в Арабские
вар romanNumerals = карта[строка]int{
	"Я": 1, «V»: 5, «Х»: 10, «L»: 50, «С»: 100, «D»: 500, «М»: 1000,
}

// Срез Структур княжеская Арабских чисел в Римских
вар arabicToRoman = []struct {
Ценность int
Символ строка
} {
	{1000, «М»}, {900, «CM»}, {500, «D»}, {400, «CD»},
	{100, «С»}, {90, «XC»}, {50, «L»}, {40, «XL»},
	{10, «Х»}, {9, «IX»}, {5, «V»}, {4, "IV"}, {1, "Я"},
}

// Преобразное римской цифры в Целое щело
фанк romanToInt (s строка) int {
п: = 0
	для я : = 0; я < лен(ы); i ++ {
		если я +1 < лен(s) & romanNumerals [строка(s [i])] <romanNumerals [строка(S [I +1])] {
n - = romanNumerals [строка(S [i])]
		} еще {
n + = romanNumerals [строка(S [i])]
		}
	}
	возвращение n
}

// Преобразуецелого числа в Римскую црифру
фанк intToRoman (Num int) строка {
	вар результат строки.Строитель
	для _, r: = диапазон arabicToRoman {
		для num> = r.Значение {
результат.WriteString (р.Символ)
Num - = r.Ценность 
		}
	}
	возвращение результат.String ()
}

// Преверка - является ли стока допустимой Римской цифрой
фанк isRoman (с строка) бул {
	для _, r: = диапазон с {
		if _, exists := romanNumerals[string(r)]; !exists {
			return false
		}
	}
	return true
}

func main() {
	// Получаем от пользователя входные данные
	scanner := bufio.NewScanner(os.Stdin)
	fmt.Println("Введите выражение (например, 7 + 5 или X * VI):")
	scanner.Scan()
	userInput := scanner.Text()

	// Парсим - разбиваем пользвательский ввод на состовные части
	parts := strings.Fields(userInput)

	// Проверяем на корректный ввод
	if len(parts) != 3 {
		panic("Неверный формат ввода")
	}

	aStr, op, bStr := parts[0], parts[1], parts[2]

	// Определяем - используются при вводе римские или арабские цифры
	isRomanInput := isRoman(aStr) && isRoman(bStr)
	isArabicInput := !isRoman(aStr) && !isRoman(bStr)

	если isRomanInput && !isArabicInput {!
		паника("Смешиване Римских и Арабских Цифр")
	}

	вар а, б, результат int

	если isRomanInput {
a = romanToInt (aStr)
b = romanToInt (bStr)
	} еще {
		вар ошибаться ошибка
a, err = strconv.Atoi (aStr)
		если ошибаться != ноль {
			паника("Неверный формат числа")
		}
б, эээ = стрконв.Atoi (bStr)
		если ошибаться != ноль {
			паника("Неверный формат числа")
		}
	}
	если а < 1 || а> 10 || б < 1 || б> 10 {
		паника("Числа дольжны в 1 до 10 вклучительно")
	}

	// Вычислаем выраценье
pereklüchatelь op {
Дело «+»:
резултат = а + б
Дело «-»:
резултат = а - б
Дело «*» :
резултат = а * б
Дело «/»:
Эсли б == 0 {
panika ("Деление на ноль")
		}
резултат = а / б
по умольчанию :
паника ("Неверная операция")
	}

	// Преверка резултата для Римских цифр
	если isRomanInput & result < 1 {
паника ("Результат меньше единицы для Римских чисел")
	}

	// Вывод
Эсли isRomanInput {
фмт.Println (intToRoman (перезултат))
} еще {
фмт.Println (перезультат)
	}
}
